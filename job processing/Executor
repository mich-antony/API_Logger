I would like to design a multitenanted remote code execution engine. The request will submited from Reat UI to FASTAPI basedd REST API, the REST API will prepare and submit the request to Kafka Topic named 'Job'. A single 'Job' request contains collection individual 'Job Items' so these are added to another Topic called 'Job Item' There will be a consumer which will read the 'Job', extract the 'Job Item' and add it into 'Job Item' topic. There will be a consumer group to read the 'Job Item' and process the 'Job Item'. The Job Item will get executed by execution engine. There are multiple Tenant and each Job and Job Item specify in which tenant the job item will get executed. Each Tenant have one Job execution engine, but each execution engine can have multipe instance of it to scale the processing. Basically the execution engine instances form the consumer group for Job Item, so each instance have one consumer.

I would like to design database schema for the above description with auditing for entire process. Use best practices and design patterns which should support enterprise standards. Explain the tables and code with sample data and usecase scenario. Also, provide Python based code to add/remove/update these tables including auditing tables. Use best practices and design patterns which should support enterprise standards.
